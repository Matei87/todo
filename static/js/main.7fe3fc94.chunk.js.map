{"version":3,"sources":["context/TaskContext.js","context/TaskReducer.js","context/types.js","context/TaskState.js","components/Form/Form.js","components/Task/Task.js","components/Tasks/Tasks.js","App.js","index.js"],"names":["TaskContext","createContext","TaskReducer","state","action","type","tasks","payload","filter","task","id","map","current","TaskState","props","tasksInitial","localStorage","getItem","initialState","JSON","parse","useReducer","dispatch","Provider","value","addTask","deleteTask","editTask","setCurrent","clearInput","clearInputList","children","Form","useState","text","setTask","useContext","taskContext","useEffect","setItem","stringify","onSubmit","e","preventDefault","className","onChange","target","uuid","required","onClick","Task","Tasks","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7fe3fc94.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\n//create context\r\nexport const TaskContext = createContext();","import { ADD_TODO, DELETE_TODO, EDIT_TODO, SET_CURRENT_TODO, CLEAR_TODO, CLEAR_TODOS } from './types';\r\n\r\n\r\n//create reducer actions by type or the TASKREDUCER\r\nexport const TaskReducer = (state, action) => {\r\n    //console.log(state, action);\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            return {\r\n                ...state,\r\n                tasks: [action.payload, ...state.tasks]\r\n            };\r\n        case DELETE_TODO:\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.filter(task => task.id !== action.payload)\r\n            };\r\n        case EDIT_TODO:\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(task => task.id === action.payload.id ? action.payload : task)\r\n            };\r\n        case SET_CURRENT_TODO:\r\n            return {\r\n                ...state,\r\n                current: action.payload\r\n            };\r\n        case CLEAR_TODO:\r\n            return {\r\n                ...state,\r\n                current: null\r\n            };\r\n        case CLEAR_TODOS:\r\n            return {\r\n                ...state,\r\n                tasks: []\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","export const ADD_TODO = \"ADD_TODO\";\r\nexport const EDIT_TODO = \"EDIT_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const SET_CURRENT_TODO = \"SET_CURRENT_TODO\";\r\nexport const CLEAR_TODO = \"CLEAR_TODO\";\r\nexport const CLEAR_TODOS = \"CLEAR_TODOS\";","import React, { useReducer } from 'react';\r\nimport { TaskContext } from './TaskContext';\r\nimport { TaskReducer } from './TaskReducer';\r\nimport { ADD_TODO, DELETE_TODO, EDIT_TODO, SET_CURRENT_TODO, CLEAR_TODO, CLEAR_TODOS } from './types';\r\n\r\n//create Task Component aka TaskState\r\nexport const TaskState = (props) => {\r\n    const tasksInitial = localStorage.getItem('tasks');\r\n    const initialState = {\r\n        tasks: JSON.parse(tasksInitial) || [],\r\n        current: null\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(TaskReducer, initialState);\r\n\r\n    //add a Task action\r\n    const addTask = (task) => {\r\n        dispatch({ type: ADD_TODO, payload: task })\r\n    }\r\n    //delete a Task action\r\n    const deleteTask = (id) => {\r\n        dispatch({ type: DELETE_TODO, payload: id })\r\n    }\r\n    //edit a task action\r\n    const editTask = (task) => {\r\n        dispatch({ type: EDIT_TODO, payload: task })\r\n    }\r\n    //set task to current action\r\n    const setCurrent = (task) => {\r\n        dispatch({ type: SET_CURRENT_TODO, payload: task })\r\n    }\r\n    //clear input action\r\n    const clearInput = (task) => {\r\n        dispatch({ type: CLEAR_TODO })\r\n    }\r\n    //clear input list action\r\n    const clearInputList = (task) => {\r\n        dispatch({ type: CLEAR_TODOS })\r\n    }\r\n    //console.log(state, dispatch)\r\n    return (\r\n        <TaskContext.Provider\r\n            value={\r\n                {\r\n                    tasks: state.tasks,\r\n                    current: state.current,\r\n                    addTask,\r\n                    deleteTask,\r\n                    editTask,\r\n                    setCurrent,\r\n                    clearInput,\r\n                    clearInputList\r\n\r\n                }\r\n            }\r\n        >\r\n            {props.children}\r\n        </TaskContext.Provider >\r\n    )\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\nimport { TaskContext } from '../../context/TaskContext';\r\nimport './Form.css';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst Form = () => {\r\n    const [task, setTask] = useState({\r\n        text: '',\r\n        id: ''\r\n    });\r\n    const { text } = task;\r\n    const { tasks, addTask, current, editTask, clearInput, clearInputList } = useContext(TaskContext);\r\n    const taskContext = useContext(TaskContext);\r\n    useEffect(() => {\r\n        if (current !== null) {\r\n            setTask(current);\r\n            //console.log(current);\r\n        } else {\r\n            setTask({ text: '', id: '' })\r\n        }\r\n        //console.log(current)\r\n    }, [taskContext, current])\r\n\r\n    const onchange = (e) => {\r\n        setTask({ ...task, text: e.target.value, id: uuid() });\r\n    }\r\n    useEffect(() => {\r\n        localStorage.setItem('tasks', JSON.stringify(tasks));\r\n    })\r\n    const onsubmit = (e) => {\r\n        e.preventDefault();\r\n        if (current === null) {\r\n            addTask(task);\r\n        } else {\r\n            editTask({ ...task, id: current.id });\r\n            setTask(current);\r\n        }\r\n        clearInput();\r\n    }\r\n    //console.log(current);\r\n    return (\r\n        <form onSubmit={onsubmit}>\r\n            <input type=\"text\" className=\"form-control\" value={text} onChange={onchange} required />\r\n            <div>\r\n                <button type=\"submit\" className=\"btn\">{current ? 'Edit' : 'Submit'}</button>\r\n                <button type=\"submit\" className=\"btn\" onClick={() => clearInputList()}>Clear</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import React, { useContext } from 'react';\r\nimport { TiPencil, TiTrash } from \"react-icons/ti\";\r\nimport { TaskContext } from \"../../context/TaskContext\";\r\nimport './Task.css';\r\n\r\n\r\nconst Task = ({ task }) => {\r\n    const { deleteTask, setCurrent } = useContext(TaskContext);\r\n    //console.log(task);\r\n\r\n    return (\r\n        <li><h5>{task.text}</h5><TiPencil onClick={() => setCurrent(task)} />\r\n            <TiTrash onClick={() => deleteTask(task.id)} /></li>\r\n    )\r\n}\r\n\r\nexport default Task;","import React, { useContext } from 'react';\r\nimport { TaskContext } from \"../../context/TaskContext\";\r\nimport Task from '../Task/Task';\r\n\r\nconst Tasks = () => {\r\n    const { tasks } = useContext(TaskContext);\r\n    //console.log(tasks)\r\n    return (\r\n        <>\r\n            { tasks ? <>\r\n                <ul>\r\n                    {\r\n                        tasks.map(task => {\r\n                            return <Task task={task} key={task.id} />;\r\n                        })\r\n                    }\r\n                </ul> </> : ''}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks;\r\n","import React from 'react';\nimport { TaskState } from './context/TaskState';\nimport Form from './components/Form/Form';\nimport Tasks from './components/Tasks/Tasks';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst App = () => {\n  return (\n    <TaskState>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className=\"card\">\n\n              <div className=\"card-header\">\n                <h1>#To Do</h1>\n              </div>\n              <div className=\"card-body\">\n                < Form />\n              </div>\n              <div className=\"card-footer\">\n                < Tasks />\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </TaskState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}